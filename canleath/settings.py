"""
Django settings for canleath project.

Generated by 'django-admin startproject' using Django 2.2.9.

For more information on this file, see
https://docs.djangoproject.com/en/2.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.2/ref/settings/
"""

# python imports
import os
from re import T
from pathlib import Path

# oscar imports
from oscar.defaults import *

# django imports
from django.utils.translation import gettext_lazy as _

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'o!ve_$2bi%$#mm24y)bg4$(=luy!eu@r%2mugk5wcbhluxbng^'

# SECURITY WARNING: don't run with debug turned on in production!
ENVIRONMENT = os.environ.get('ENVIRONMENT')
DEBUG = False if ENVIRONMENT else True

ALLOWED_HOSTS = ['*']


# Application definition

ROOT_APP = ()

DJANGO_CORE_APPS = (
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    # 2 additional apps for oscar
    'django.contrib.sites',
    'django.contrib.flatpages',
)


CANLEATH_APPS = (
    'accounts',
    'website',
    'oscarapi',

    #forked apps
    'catalogue.apps.CatalogueConfig',
    'dashboard.catalogue.apps.CatalogueDashboardConfig',
    'partner.apps.PartnerConfig',
    'customer.apps.CustomerConfig',
    'basket.apps.BasketConfig',
    'checkout.apps.CheckoutConfig',
    'search.apps.SearchConfig',
    'dashboard.users.apps.UsersDashboardConfig',
    'order.apps.OrderConfig',
    'address.apps.AddressConfig',
    'shipping.apps.ShippingConfig',
    'dashboard.vouchers.apps.VouchersDashboardConfig',
    'voucher.apps.VoucherConfig',
    'dashboard.orders.apps.OrdersDashboardConfig'
)

DJANGO_OSCAR_APPS = (
    'oscar',
    'oscar.apps.communication',
    'oscar.apps.analytics',
    # 'oscar.apps.address',
    # 'oscar.apps.shipping',
    'oscar.apps.catalogue.reviews',
    'oscar.apps.payment',
    'oscar.apps.offer',
    # 'oscar.apps.order',
    # 'oscar.apps.voucher',
    'oscar.apps.wishlists',
    'oscar.apps.dashboard',
    'oscar.apps.dashboard.reports',
    # 'oscar.apps.dashboard.orders',
    'oscar.apps.dashboard.offers',
    'oscar.apps.dashboard.partners',
    'oscar.apps.dashboard.pages',
    'oscar.apps.dashboard.ranges',
    'oscar.apps.dashboard.reviews',
    # 'oscar.apps.dashboard.vouchers',
    'oscar.apps.dashboard.communications',
    'oscar.apps.dashboard.shipping',
)

THIRD_PARTY_APPS = (
    'corsheaders',
    'rest_framework',
    'rest_framework.authtoken',
    # 3rd-party apps that oscar depends on
    'widget_tweaks',
    'haystack',
    'treebeard',
    'sorl.thumbnail',
    'django_tables2',
    'mathfilters',
)



CORS_ALLOW_ALL_ORIGINS = True

INSTALLED_APPS = ROOT_APP + DJANGO_CORE_APPS + THIRD_PARTY_APPS + CANLEATH_APPS + DJANGO_OSCAR_APPS

SITE_ID = 1

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',

    # 2 middleware for django oscar
    # 'oscar.apps.basket.middleware.BasketMiddleware',
    'oscarapi.middleware.ApiBasketMiddleWare',
    'django.contrib.flatpages.middleware.FlatpageFallbackMiddleware',
]

AUTHENTICATION_BACKENDS = (
    # 'oscar.apps.customer.auth_backends.EmailBackend',
    'django.contrib.auth.backends.ModelBackend',
    'accounts.backends.MobileOTPAuthenticationBackEnd',
    'accounts.backends.MobileOnlyAuthenticationBackEnd',
)

ROOT_URLCONF = 'canleath.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates'),],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'django.template.context_processors.static',
                'django.template.context_processors.media',

                # context processor django oscar
                'oscar.apps.search.context_processors.search_form',
                'oscar.apps.checkout.context_processors.checkout',
                # 'oscar.apps.customer.notifications.context_processors.notifications',
                'oscar.core.context_processors.metadata',
                'catalogue.context_processors.get_level_one_category',
                'catalogue.context_processors.get_footer_gallery_products',


            ],

            'libraries':{
            'go_to_cart_product': 'catalogue.templatetags.go_to_cart_product',
            'order_amount': 'catalogue.templatetags.order_amount',
            
            }
        },
    },
]

REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework.authentication.BasicAuthentication',
        'rest_framework.authentication.SessionAuthentication',
        'rest_framework.authentication.TokenAuthentication',
    ),
}


HAYSTACK_CONNECTIONS = {
    'default': {
        'ENGINE': 'haystack.backends.simple_backend.SimpleEngine',
    },
}

WSGI_APPLICATION = 'canleath.wsgi.application'


# Database
# https://docs.djangoproject.com/en/2.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}


# Password validation
# https://docs.djangoproject.com/en/2.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# oscar pagination for products
OSCAR_PRODUCTS_PER_PAGE = 24

# oscar product status pipeline
OSCAR_INITIAL_ORDER_STATUS = 'Success'
OSCAR_INITIAL_LINE_STATUS = 'Pending'

OSCAR_ORDER_STATUS_PIPELINE = {
    'Pending': ('Being processed', 'Cancelled',),
    'Being processed': ('Processed', 'Cancelled',),
    'Processed': ('Cancelled',),
    'Cancelled': ('Refund Processed',),
    'Refund Processed': ('Refunded',),
    'Refunded': (),
}

OSCAR_LINE_STATUS_PIPELINE = {
    'Pending': ('Being processed', 'Cancelled',),
    'Being processed': ('Processed', 'Cancelled',),
    'Processed': ('Cancelled',),
    'Cancelled': ('Refund Processed',),
    'Refund Processed': ('Refunded',),
    'Refunded': (),
}

# custom user model
AUTH_USER_MODEL = 'accounts.User'

# Otp expiration time
OTP_VALIDITY = 30

# Sms Settings
SMS_GATEWAY_USERNAME = os.environ.get('SMS_GATEWAY_USERNAME', '9555248861')
SMS_GATEWAY_PASSWORD = os.environ.get('SMS_GATEWAY_PASSWORD', '125411')
SMS_GATEWAY_SENDER_ID = os.environ.get('SMS_GATEWAY_SENDER_ID', 'INSTFT')
SMS_GATEWAY_API_KEY = '6aad67a9-c7cb-11ea-9fa5-0200cd936042'

# oscar dashboard setting
OSCAR_SHOP_NAME = 'InstaEats'

OSCAR_DEFAULT_CURRENCY = 'INR'

OSCAR_HOMEPAGE = reverse_lazy('website:new_homepage')

OSCAR_SEND_REGISTRATION_EMAIL = True

OSCAR_FROM_EMAIL = 'if-ecom@sudofire.com'

OSCARAPI_BLOCK_ADMIN_API_ACCESS = False

ADMINS = [
    ('serverfaults', 'moin@sudofire.com', 'nirmala@sudofire.com'),
]

# oscar dashboard menu customization
OSCAR_DASHBOARD_NAVIGATION = [
    {
        'label': _('Dashboard'),
        'icon': 'icon-th-list',
        'url_name': 'dashboard:index',
    },
    {
        'label': _('Catalogue'),
        'icon': 'icon-sitemap',
        'children': [
            {
                'label': _('Products'),
                'url_name': 'dashboard:catalogue-product-list',
            },
            {
                'label': _('Product Types'),
                'url_name': 'dashboard:catalogue-class-list',
            },
            {
                'label': _('Categories'),
                'url_name': 'dashboard:catalogue-category-list',
            },
            {
                'label': _('Low stock alerts'),
                'url_name': 'dashboard:stock-alert-list',
            },
            # {
            #     'label': _('Options'),
            #     'url_name': 'dashboard:catalogue-option-list',
            # },
        ]
    },
    {
        'label': _('Fulfilment'),
        'icon': 'icon-shopping-cart',
        'children': [
            {
                'label': _('Orders'),
                'url_name': 'dashboard:order-list',
            },
            {
                'label': _('Statistics'),
                'url_name': 'dashboard:order-stats',
            },
            {
                'label': _('Partners'),
                'url_name': 'dashboard:partner-list',
            },
            # The shipping method dashboard is disabled by default as it might
            # be confusing. Weight-based shipping methods aren't hooked into
            # the shipping repository by default (as it would make
            # customising the repository slightly more difficult).
            # {
            #     'label': _('Shipping charges'),
            #     'url_name': 'dashboard:shipping-method-list',
            # },
        ]
    },
    {
        'label': _('Customers'),
        'icon': 'icon-group',
        'children': [
            {
                'label': _('Customers'),
                'url_name': 'dashboard:users-index',
            },
            {
                'label': _('Stock alert requests'),
                'url_name': 'dashboard:user-alert-list',
            },
        ]
    },
    {
        'label': _('Offers'),
        'icon': 'icon-bullhorn',
        'children': [
            # {
            #     'label': _('Offers'),
            #     'url_name': 'dashboard:offer-list',
            # },
            {
                'label': _('Vouchers'),
                'url_name': 'dashboard:voucher-list',
            },
            # {
            #     'label': _('Voucher Sets'),
            #     'url_name': 'dashboard:voucher-set-list',
            # },
            {
                'label': _('Ranges'),
                'url_name': 'dashboard:range-list',
            },

        ],
    },
    # {
    #     'label': _('Content'),
    #     'icon': 'icon-folder-close',
    #     'children': [
    #         {
    #             'label': _('Pages'),
    #             'url_name': 'dashboard:page-list',
    #         },
    #         {
    #             'label': _('Email users'),
    #             'url_name': 'dashboard:comms-list',
    #         },
    #         {
    #             'label': _('Reviews'),
    #             'url_name': 'dashboard:reviews-list',
    #         },
    #     ]
    # },
    {
        'label': _('Reports'),
        'icon': 'icon-bar-chart',
        'url_name': 'dashboard:reports-index',
    },
    {
        'label': _('Banner Images'),
        'icon': 'icon-screenshot',
        'url_name': 'dashboard:banner_image_list',
    },
    {
        'label': _('Testimonial'),
        'icon': 'icon-pencil',
        'url_name': 'dashboard:customer_testimonial_list',
    },
    {
        'label': _('News Letter'),
        'icon': 'icon-screenshot',
        'url_name': 'dashboard:news_letter_list',
    },
    {
        'label': _('Dietitions And Nutritionists'),
        'icon': 'icon-screenshot',
        'url_name': 'dashboard:dietitions_and_nutritionists_list',
    },
    {
        'label': _('Who we are'),
        'icon': 'icon-screenshot',
        'url_name': 'dashboard:who_we_are_list',
    },
    {
        'label': _('ProductReview'),
        'icon': 'icon-screenshot',
        'url_name': 'dashboard:product_review_list',
    },
    {
        'label': _(' Product FAQS'),
        'icon': 'icon-screenshot',
        'url_name': 'dashboard:faqsproduct_list',
    },
    {
        'label': _('Questionaire'),
        'icon': 'icon-screenshot',
        'url_name': 'dashboard:questionaire_list',
    },
    {
        'label': _('Lets Say NO to Micronutrient deficiency'),
        'icon': 'icon-screenshot',
        'url_name': 'dashboard:blog_list',
    },
     {
        'label': _('Micronutrient deficiency'),
        'icon': 'icon-screenshot',
        'url_name': 'dashboard:micronutrient_list',
    },
     {
        'label': _('How it work'),
        'icon': 'icon-screenshot',
        'url_name': 'dashboard:how_it_work_list',
    },
     {
        'label': _('Our products'),
        'icon': 'icon-screenshot',
        'url_name': 'dashboard:our_products_list',
    },
       {
        'label': _('Consult'),
        'icon': 'icon-screenshot',
        'url_name': 'dashboard:consult_list',
    },
      {
        'label': _('Client Logo'),
        'icon': 'icon-screenshot',
        'url_name': 'dashboard:client_logo_list',
    },
    
    
     {
        'label': _('FAQ section'),
        'icon': 'icon-question',
        'children': [
            {
                'label': _('FAQS'),
                'url_name': 'dashboard:question_list',
            },
            {
                'label': _('FAQ content'),
                'url_name': 'dashboard:faqicon_list',
            },
            
        ]
    },

     {
        'label': _('About us'),
        'icon': 'icon-screenshot',
        'url_name': 'dashboard:frame1_list',
    },

     {
        'label': _('Header'),
        'icon': 'icon-screenshot',
        'url_name': 'dashboard:header_list',
    },
    #  {
    #     'label': _('Footer'),
    #     'icon': 'icon-screenshot',
    #     'url_name': 'dashboard:footer_list',
    # },



 

    
  
  
  
 ]

# Internationalization
# https://docs.djangoproject.com/en/2.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'Asia/Kolkata'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.2/howto/static-files/

STATIC_URL = '/static/'

STATIC_ROOT = os.path.join(BASE_DIR, 'static_root')

STATICFILES_DIRS = (
    os.path.join(BASE_DIR, 'static'),
)
WKHTMLTOPDF_CMD = 'C:/Program Files/wkhtmltopdf/bin/wkhtmltopdf'

# media
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')
MEDIA_URL = "/media/"


# Import development settings /staging settings / production settings
if ENVIRONMENT == 'PRODUCTION':
    from ._settings.production import *
elif ENVIRONMENT == 'STAGING':
    from ._settings.staging import *
else:
    from ._settings.development import *

try:
    from ._settings.local import *
except ImportError:
    pass
